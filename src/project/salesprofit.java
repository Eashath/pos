/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ICTSTUDENT
 */
public class salesprofit extends javax.swing.JFrame {
Connection conn=null;
PreparedStatement PST=null;
ResultSet RS=null;
Statement st;
String date;
String date1;
String date2;
String date3;
boolean seach=false;
boolean seach1=false;
boolean seach2=false;

    /**
     * Creates new form salesprofit
     */
    public salesprofit() {
        initComponents();
        showdepth();
        setDefaultCloseOperation (salesprofit.DISPOSE_ON_CLOSE);
        comload();
        comload1();
        comload4();
        AutoCompleteDecorator.decorate(jComboBox1);
        AutoCompleteDecorator.decorate(jComboBox2);
//        AutoCompleteDecorator.decorate(jComboBox3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        sales = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        cost = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        profit = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jDateChooserfrom = new com.toedter.calendar.JDateChooser();
        jDateChooserto = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 12, 6, 12, new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BILL NO", "DATE", "TIME", "CUSTOMER NAME", "PRODUCT ID", "PRODUCT NAME", "BUY PRICE", "SALE PRICE ", "QUANTITY", "SUB TOTAL", "BILL TOTAL"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TOTAL SALES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 1, 18))); // NOI18N

        sales.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sales, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(sales, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TOTAL COST", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 1, 18))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(236, 81));

        cost.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cost, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(cost)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PROFIT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tempus Sans ITC", 1, 18))); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(236, 81));

        profit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        profit.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profit, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(profit)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "DAY PRFIT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        jDateChooser1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jDateChooser1.setDateFormatString("y,MMM d");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/sales-performance-24.png"))); // NOI18N
        jButton1.setText("CALCULATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "BILL NO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jDateChooserfrom.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jDateChooserto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("FROM");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("TO");

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/sales-performance-24.png"))); // NOI18N
        jButton2.setText("CALCULATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooserfrom, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooserto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jDateChooserfrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooserto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "BILL NO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jComboBox1.setEditable(true);
        jComboBox1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jComboBox1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox1PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "PRODCUCT NO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jComboBox2.setEditable(true);
        jComboBox2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jComboBox2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox2PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox2, 0, 151, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "COMPANY PRODUCT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jComboBox3.setEditable(true);
        jComboBox3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jComboBox3.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox3PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox3, 0, 202, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(216, 216, 216))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(6, 12, 1, 12, new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel3.setText("SALES PROFIT");

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/home-24.png"))); // NOI18N
        jButton3.setText("HOME");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jButton3)
                .addGap(250, 250, 250)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     public ArrayList<profitclass>profitclasslist(){
    ArrayList<profitclass> profitclasslist=new ArrayList<>();
    try
    {
        if (false==seach){
        conn=dbconnection.getConnection();
        PST=conn.prepareStatement("Select * from bill");
        st=conn.createStatement();
        RS=st.executeQuery("Select * from bill;");
        RS=PST.executeQuery();
        profitclass profitclass;
        while(RS.next())
        {
        
            profitclass = new profitclass(RS.getString("billno"),RS.getString("date"),RS.getString("time"),RS.getString("customername"),RS.getString("productid"),RS.getString("productname"),RS.getString("productnormalprice"),RS.getString("sellingprice"),RS.getString("quantity"),RS.getString("subtotal"),RS.getString("billtotal"));
            profitclasslist.add(profitclass);
        }
        } else {
        conn=dbconnection.getConnection();
        PST=conn.prepareStatement("Select * from bill where date ='"+date+"'");
        st=conn.createStatement();
        RS=PST.executeQuery();
        profitclass profitclass;
        while(RS.next())
        {
        
           profitclass = new profitclass(RS.getString("billno"),RS.getString("date"),RS.getString("time"),RS.getString("customername"),RS.getString("productid"),RS.getString("productname"),RS.getString("productnormalprice"),RS.getString("sellingprice"),RS.getString("quantity"),RS.getString("subtotal"),RS.getString("billtotal"));
            profitclasslist.add(profitclass);
        }
        
        }
    }
    
    catch(SQLException e)
    {
        //JOptionPane.showMessageDialog(null, e);
    }
    return profitclasslist;
    }
    
     
     
     
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        seach=true;

        if(jDateChooser1.getDate()!=null){
        SimpleDateFormat sdf=new  SimpleDateFormat("yyyy-MM-dd");
        date = sdf.format(jDateChooser1.getDate());
        System.out.println(date);
 
        DefaultTableModel dm2 = (DefaultTableModel)jTable1.getModel();
        dm2.getDataVector().removeAllElements();
        jTable1.repaint();
        showdepth();
         try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum((productnormalprice * quantity))as cost from bill Where date=?");
            PST.setString(1,date);
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                cost.setText(RS.getString("cost"));
//                tb3.setText(RS.getString("lastname"));
//                tb4.setText(RS.getString("phonenumber"));
//                tb5.setText(RS.getString("address"));
//                tb6.setText(RS.getString("cityname"));
            }  
            try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum(subtotal)as sales from bill Where date=?");
            PST.setString(1,date);
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                sales.setText(RS.getString("sales"));
//                tb3.setText(RS.getString("lastname"));
//                tb4.setText(RS.getString("phonenumber"));
//                tb5.setText(RS.getString("address"));
//                tb6.setText(RS.getString("cityname"));
            }  
             try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("select sum(subtotal- (productnormalprice * quantity))as profit from bill where date=?");
            PST.setString(1,date);
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                profit.setText(RS.getString("profit"));
//                tb3.setText(RS.getString("lastname"));
//                tb4.setText(RS.getString("phonenumber"));
//                tb5.setText(RS.getString("address"));
//                tb6.setText(RS.getString("cityname"));
            }  
            
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
         jDateChooserfrom.setDate(null);
         jDateChooserto.setDate(null);
//         jComboBox3.setSelectedItem("");
//         jComboBox2.setSelectedItem("");
//         jComboBox3.setSelectedItem("");
    }//GEN-LAST:event_jButton1ActionPerformed
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         seach1=true;

        String v1 = jDateChooserfrom.getDate().toString();
        String v2 = jDateChooserto.getDate().toString();
        try{
            conn=dbconnection.getConnection();
            String sql = "select * from bill where date between '"+v1+"' AND '"+v2+"'";
            PST = conn.prepareStatement(sql);
            ResultSet rs = PST.executeQuery();
            
            if(jDateChooserfrom.getDate()!=null){
            SimpleDateFormat sdf=new  SimpleDateFormat("yyyy-MM-dd");
            date1 = sdf.format(jDateChooserfrom.getDate());
            System.out.println(date1);
            
            if(jDateChooserto.getDate()!=null){
            SimpleDateFormat sd=new  SimpleDateFormat("yyyy-MM-dd");
            date2 = sd.format(jDateChooserto.getDate());
            System.out.println(date2);
            showdepth1();
        }
        }
        }
        catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e);
        }            
        
        
        
        try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum((productnormalprice * quantity))as cost from bill Where date between '"+date1+"' AND '"+date2+"'");
//            PST.setString(1,date);
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                cost.setText(RS.getString("cost"));

            }  
            try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum(subtotal)as sales from bill Where date between '"+date1+"' AND '"+date2+"'");
//            PST.setString(1,date);
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                sales.setText(RS.getString("sales"));

            }  
             try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("select sum(subtotal- (productnormalprice * quantity))as profit from bill Where date between '"+date1+"' AND '"+date2+"'");
//            PST.setString(1,date);
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                profit.setText(RS.getString("profit"));

            }  
            
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDateChooser1.setDate(null);
//         jDateChooserto.setDate(null);                                    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox1PopupMenuWillBecomeInvisible
        // TODO add your handling code here:
         try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("SELECT * FROM bill Where billno=? ORDER BY time  ASC");

            PST.setString(1, (String)  jComboBox1.getSelectedItem());
//            namecombo.setSelectedItem("");
//            AutoCompleteDecorator.decorate(jComboBox1);
            RS=PST.executeQuery();
            if(RS.next());
            {
                showdepth2();
            }
           

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "");

        }
          try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum((productnormalprice * quantity))as cost from bill Where billno=?");
//            PST.setString(1,date);
           PST.setString(1,jComboBox1.getSelectedItem().toString());
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                cost.setText(RS.getString("cost"));

            }  
            try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum(subtotal)as sales from bill Where billno=?");
//            PST.setString(1,date);
             PST.setString(1,jComboBox1.getSelectedItem().toString());
            RS=PST.executeQuery();
            if(RS.next());
            {
                sales.setText(RS.getString("sales"));

            }  
             try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("select sum(subtotal- (productnormalprice * quantity))as profit from bill Where billno=?");
//            PST.setString(1,date);
             PST.setString(1,jComboBox1.getSelectedItem().toString());
            RS=PST.executeQuery();
            if(RS.next());
            {
                profit.setText(RS.getString("profit"));

            }  
            
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
         jDateChooserfrom.setDate(null);
         jDateChooserto.setDate(null); 
         jDateChooser1.setDate(null); 
    }//GEN-LAST:event_jComboBox1PopupMenuWillBecomeInvisible

    private void jComboBox2PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox2PopupMenuWillBecomeInvisible
        // TODO add your handling code here:
         try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("SELECT * FROM bill Where productid=?");

            PST.setString(1, (String)  jComboBox2.getSelectedItem());
//            namecombo.setSelectedItem("");
//            AutoCompleteDecorator.decorate(jComboBox1);
            RS=PST.executeQuery();
            if(RS.next());
            {
                showdepth3();
            }
           

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "");

        }
          try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum((productnormalprice * quantity))as cost from bill Where productid=?");
//            PST.setString(1,date);
           PST.setString(1,jComboBox2.getSelectedItem().toString());
            
            RS=PST.executeQuery();
            if(RS.next());
            {
                cost.setText(RS.getString("cost"));

            }  
            try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum(subtotal)as sales from bill Where productid=?");
//            PST.setString(1,date);
             PST.setString(1,jComboBox2.getSelectedItem().toString());
            RS=PST.executeQuery();
            if(RS.next());
            {
                sales.setText(RS.getString("sales"));

            }  
             try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("select sum(subtotal- (productnormalprice * quantity))as profit from bill Where productid=?");
//            PST.setString(1,date);
             PST.setString(1,jComboBox2.getSelectedItem().toString());
            RS=PST.executeQuery();
            if(RS.next());
            {
                profit.setText(RS.getString("profit"));

            }  
            
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDateChooserfrom.setDate(null);
        jDateChooserto.setDate(null); 
        jDateChooser1.setDate(null);   
    }//GEN-LAST:event_jComboBox2PopupMenuWillBecomeInvisible

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         new salespage().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox3PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox3PopupMenuWillBecomeInvisible
        // TODO add your handling code here:
         try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("select b.* from bill b, product p,company c where p.productcompanyname=c.companyname and b.productid=p.productid and c.companyname=? ORDER BY time  ASC");

            PST.setString(1, (String)  jComboBox3.getSelectedItem());
//            namecombo.setSelectedItem("");
//            AutoCompleteDecorator.decorate(jComboBox1);
            RS=PST.executeQuery();
            if(RS.next())
            {
                showdepth4();
            }
           

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "");

        }
          try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum((b.productnormalprice *b.quantity))as cost from bill b, product p,company c where p.productcompanyname=c.companyname and b.productid=p.productid and c.companyname=?;");
//            PST.setString(1,date);
           PST.setString(1,jComboBox3.getSelectedItem().toString());
            
            RS=PST.executeQuery();
            if(RS.next())
            {
                cost.setText(RS.getString("cost"));

            }  
            try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement(" select sum(b.subtotal)as sales from bill b, product p,company c where p.productcompanyname=c.companyname and b.productid=p.productid and c.companyname=?");
//            PST.setString(1,date);
             PST.setString(1,jComboBox3.getSelectedItem().toString());
            RS=PST.executeQuery();
            if(RS.next())
            {
                sales.setText(RS.getString("sales"));

            }  
             try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("select sum(b.subtotal- (b.productnormalprice *b.quantity))as profit from bill b, product p,company c where p.productcompanyname=c.companyname and b.productid=p.productid and c.companyname=?");
//            PST.setString(1,date);
             PST.setString(1,jComboBox3.getSelectedItem().toString());
            RS=PST.executeQuery();
            if(RS.next())
            {
                profit.setText(RS.getString("profit"));

            }  
            
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } catch (SQLException ex) {
            Logger.getLogger(salesprofit.class.getName()).log(Level.SEVERE, null, ex);
        }
         jDateChooserfrom.setDate(null);
         jDateChooserto.setDate(null); 
         jDateChooser1.setDate(null); 
    }//GEN-LAST:event_jComboBox3PopupMenuWillBecomeInvisible
    public ArrayList<profitclass>profitclasslist1(){
    ArrayList<profitclass> profitclasslist1=new ArrayList<>();
    try
    {
        if (false==seach1){
        conn=dbconnection.getConnection();
        PST=conn.prepareStatement("Select * from bill");
        st=conn.createStatement();
        RS=st.executeQuery("Select * from bill;");
        RS=PST.executeQuery();
        profitclass profitclass;
        while(RS.next())
        {
        
            profitclass = new profitclass(RS.getString("billno"),RS.getString("date"),RS.getString("time"),RS.getString("customername"),RS.getString("productid"),RS.getString("productname"),RS.getString("productnormalprice"),RS.getString("sellingprice"),RS.getString("quantity"),RS.getString("subtotal"),RS.getString("billtotal"));
            profitclasslist1.add(profitclass);
        }
        } else {
        conn=dbconnection.getConnection();
        PST=conn.prepareStatement("Select * from bill where date between '"+date1+"' and '"+date2+"'");
        st=conn.createStatement();
        RS=PST.executeQuery();
        profitclass profitclass;
        while(RS.next())
        {
        
           profitclass = new profitclass(RS.getString("billno"),RS.getString("date"),RS.getString("time"),RS.getString("customername"),RS.getString("productid"),RS.getString("productname"),RS.getString("productnormalprice"),RS.getString("sellingprice"),RS.getString("quantity"),RS.getString("subtotal"),RS.getString("billtotal"));
           profitclasslist1.add(profitclass);
        }
        
        }
    }
    
    catch(SQLException e)
    {
        //JOptionPane.showMessageDialog(null, e);
    }
    return profitclasslist1;
    }
    
    
    public ArrayList<profitclass>profitclasslist2(String ValToSerach){
    ArrayList<profitclass> profitclasslist2=new ArrayList<>();
    try
    {
        
        conn=dbconnection.getConnection();
        PST=conn.prepareStatement("Select * from bill where billno=? ORDER BY time  ASC");
        PST.setString(1, (String)  jComboBox1.getSelectedItem());
        st=conn.createStatement();
        RS=PST.executeQuery();
        profitclass profitclass;
        while(RS.next())
        {
        
           profitclass = new profitclass(RS.getString("billno"),RS.getString("date"),RS.getString("time"),RS.getString("customername"),RS.getString("productid"),RS.getString("productname"),RS.getString("productnormalprice"),RS.getString("sellingprice"),RS.getString("quantity"),RS.getString("subtotal"),RS.getString("billtotal"));
           profitclasslist2.add(profitclass);
        }
        
        }
    
    
    catch(SQLException e)
    {
        //JOptionPane.showMessageDialog(null, e);
    }
    return profitclasslist2;
    }
    
    
    
    public ArrayList<profitclass>profitclasslist3(String ValToSerach){
    ArrayList<profitclass> profitclasslist3=new ArrayList<>();
    try
    {
        
        conn=dbconnection.getConnection();
        PST=conn.prepareStatement("Select * from bill where productid=?");
        PST.setString(1, (String)  jComboBox2.getSelectedItem());
        st=conn.createStatement();
        RS=PST.executeQuery();
        profitclass profitclass;
        while(RS.next())
        {
        
           profitclass = new profitclass(RS.getString("billno"),RS.getString("date"),RS.getString("time"),RS.getString("customername"),RS.getString("productid"),RS.getString("productname"),RS.getString("productnormalprice"),RS.getString("sellingprice"),RS.getString("quantity"),RS.getString("subtotal"),RS.getString("billtotal"));
           profitclasslist3.add(profitclass);
        }
        
        }
    
    
    catch(SQLException e)
    {
        //JOptionPane.showMessageDialog(null, e);
    }
    return profitclasslist3;
    }
    
     public ArrayList<profitclass>profitclasslist4(String ValToSerach){
    ArrayList<profitclass> profitclasslist4=new ArrayList<>();
    try
    {
        
        conn=dbconnection.getConnection();
        PST=conn.prepareStatement("select b.* from bill b, product p,company c where p.productcompanyname=c.companyname and b.productid=p.productid and c.companyname=?");
        PST.setString(1, (String)  jComboBox3.getSelectedItem());
        st=conn.createStatement();
        RS=PST.executeQuery();
        profitclass profitclass;
        while(RS.next())
        {
        
           profitclass = new profitclass(RS.getString("billno"),RS.getString("date"),RS.getString("time"),RS.getString("customername"),RS.getString("productid"),RS.getString("productname"),RS.getString("productnormalprice"),RS.getString("sellingprice"),RS.getString("quantity"),RS.getString("subtotal"),RS.getString("billtotal"));
           profitclasslist4.add(profitclass);
        }
        
        }
    
    
    catch(SQLException e)
    {
        //JOptionPane.showMessageDialog(null, e);
    }
    return profitclasslist4;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(salesprofit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(salesprofit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(salesprofit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(salesprofit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new salesprofit().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cost;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooserfrom;
    private com.toedter.calendar.JDateChooser jDateChooserto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField profit;
    private javax.swing.JTextField sales;
    // End of variables declaration//GEN-END:variables
 private void showdepth() {
        ArrayList<profitclass> list=profitclasslist();
        DefaultTableModel model=new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"billno","date","time","customername","productid","productname","productnormalprice","sellingprice","quantity","subtotal","billtotal"});
        Object [] row=new Object[11];
        for(int i=0;i<list.size();i++)
        {
            row[0]=list.get(i).getbillno();
            row[1]=list.get(i).getdate();
            row[2]=list.get(i).gettime();
            row[3]=list.get(i).getcustomername();
            row[4]=list.get(i).getproductid();
            row[5]=list.get(i).getproductname();
            row[6]=list.get(i).getproductnormalprice();
            row[7]=list.get(i).getsellingprice();
            row[8]=list.get(i).getquantity();
            row[9]=list.get(i).getsubtotal();
            row[10]=list.get(i).getbilltotal();
            model.addRow(row);
        }
        jTable1.setModel(model);
}
 private void showdepth1() {
        ArrayList<profitclass> list=profitclasslist1();
        DefaultTableModel model=new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"billno","date","time","customername","productid","productname","productnormalprice","sellingprice","quantity","subtotal","billtotal"});
        Object [] row=new Object[11];
        for(int i=0;i<list.size();i++)
        {
            row[0]=list.get(i).getbillno();
            row[1]=list.get(i).getdate();
            row[2]=list.get(i).gettime();
            row[3]=list.get(i).getcustomername();
            row[4]=list.get(i).getproductid();
            row[5]=list.get(i).getproductname();
            row[6]=list.get(i).getproductnormalprice();
            row[7]=list.get(i).getsellingprice();
            row[8]=list.get(i).getquantity();
            row[9]=list.get(i).getsubtotal();
            row[10]=list.get(i).getbilltotal();
            model.addRow(row);
        }
        jTable1.setModel(model);
}
 
 
 private void showdepth2() {
        ArrayList<profitclass> list=profitclasslist2(jComboBox1.getSelectedItem().toString());
        DefaultTableModel model=new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"billno","date","time","customername","productid","productname","productnormalprice","sellingprice","quantity","subtotal","billtotal"});
        Object [] row=new Object[11];
        for(int i=0;i<list.size();i++)
        {
            row[0]=list.get(i).getbillno();
            row[1]=list.get(i).getdate();
            row[2]=list.get(i).gettime();
            row[3]=list.get(i).getcustomername();
            row[4]=list.get(i).getproductid();
            row[5]=list.get(i).getproductname();
            row[6]=list.get(i).getproductnormalprice();
            row[7]=list.get(i).getsellingprice();
            row[8]=list.get(i).getquantity();
            row[9]=list.get(i).getsubtotal();
            row[10]=list.get(i).getbilltotal();
            model.addRow(row);
        }
        jTable1.setModel(model);
 }
 
 private void showdepth3() {
        ArrayList<profitclass> list=profitclasslist3(jComboBox2.getSelectedItem().toString());
        DefaultTableModel model=new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"billno","date","time","customername","productid","productname","productnormalprice","sellingprice","quantity","subtotal","billtotal"});
        Object [] row=new Object[11];
        for(int i=0;i<list.size();i++)
        {
            row[0]=list.get(i).getbillno();
            row[1]=list.get(i).getdate();
            row[2]=list.get(i).gettime();
            row[3]=list.get(i).getcustomername();
            row[4]=list.get(i).getproductid();
            row[5]=list.get(i).getproductname();
            row[6]=list.get(i).getproductnormalprice();
            row[7]=list.get(i).getsellingprice();
            row[8]=list.get(i).getquantity();
            row[9]=list.get(i).getsubtotal();
            row[10]=list.get(i).getbilltotal();
            model.addRow(row);
        }
        jTable1.setModel(model);
 }
 
  private void showdepth4() {
        ArrayList<profitclass> list=profitclasslist4(jComboBox3.getSelectedItem().toString());
        DefaultTableModel model=new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"billno","date","time","customername","productid","productname","productnormalprice","sellingprice","quantity","subtotal","billtotal"});
        Object [] row=new Object[11];
        for(int i=0;i<list.size();i++)
        {
            row[0]=list.get(i).getbillno();
            row[1]=list.get(i).getdate();
            row[2]=list.get(i).gettime();
            row[3]=list.get(i).getcustomername();
            row[4]=list.get(i).getproductid();
            row[5]=list.get(i).getproductname();
            row[6]=list.get(i).getproductnormalprice();
            row[7]=list.get(i).getsellingprice();
            row[8]=list.get(i).getquantity();
            row[9]=list.get(i).getsubtotal();
            row[10]=list.get(i).getbilltotal();
            model.addRow(row);
        }
        jTable1.setModel(model);
 }
 
 
 private void comload() {
        try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("SELECT billnumber FROM billno");
            RS=PST.executeQuery();
            while(RS.next())
            {
                String did=RS.getString("billnumber");
                jComboBox1.addItem(did);
            }
            } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null,ex);
        }
 }
 
  private void comload1() {
        try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("SELECT productid FROM product ");
            RS=PST.executeQuery();
            while(RS.next())
            {
                String did=RS.getString("productid");
                jComboBox2.addItem(did);
            }
            } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null,ex);
        }
  }
  private void comload4() {
        try{
            conn=dbconnection.getConnection();
            PST=conn.prepareStatement("SELECT companyname FROM company ");
            RS=PST.executeQuery();
            while(RS.next())
            {
                String did=RS.getString("companyname");
                jComboBox3.addItem(did);
            }
            } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null,ex);
        }
  }
}